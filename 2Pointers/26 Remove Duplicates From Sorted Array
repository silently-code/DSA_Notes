âœ… LeetCode 26: Remove Duplicates from Sorted Array
ðŸ§  Approach: Two Pointers

ðŸ”¸ Java

class Solution {
    public int removeDuplicates(int[] nums) {
        int i = 0;
        for (int j = 0; j < nums.length; j++) {
            if (nums[j] != nums[i]) {
                i++;
                int temp = nums[j];
                nums[j] = nums[i];
                nums[i] = temp;
            }
        }
        return i + 1;
    }
}


ðŸ”¸ C

int removeDuplicates(int* nums, int numsSize) {
    if (numsSize == 0) return 0;
    int i = 0;
    for (int j = 0; j < numsSize; j++) {
        if (nums[j] != nums[i]) {
            i++;
            int temp = nums[j];
            nums[j] = nums[i];
            nums[i] = temp;
        }
    }
    return i + 1;
}


ðŸ”¸ C++

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int i = 0;
        for (int j = 0; j < nums.size(); j++) {
            if (nums[j] != nums[i]) {
                i++;
                int temp = nums[j];
                nums[j] = nums[i];
                nums[i] = temp;
            }
        }
        return i + 1;
    }
};


ðŸ”¸ Python

class Solution:
    def removeDuplicates(self, nums):
        i = 0
        for j in range(len(nums)):
            if nums[j] != nums[i]:
                i += 1
                nums[i], nums[j] = nums[j], nums[i]
        return i + 1
